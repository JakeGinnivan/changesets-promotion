diff --git a/node_modules/@changesets/cli/dist/cli.cjs.dev.js b/node_modules/@changesets/cli/dist/cli.cjs.dev.js
index 9797d3b..a2e40bc 100644
--- a/node_modules/@changesets/cli/dist/cli.cjs.dev.js
+++ b/node_modules/@changesets/cli/dist/cli.cjs.dev.js
@@ -669,6 +669,18 @@ async function publishAPackage(pkg, access, twoFactorState, tag) {
     version,
     publishConfig
   } = pkg.packageJson;
+  if (config.changesets && config.changesets.publish) {
+    const customPublish = require(path.resolve(pkg.dir, config.changesets.publish))
+    logger.info(`Running custom deployment step ${chalk.cyan(`"${name}"`)} at ${chalk.green(`"${version}"`)}`);
+
+    const customPublishResult = await customPublish.publish(pkg, tag)
+    return {
+      name,
+      newVersion: version,
+      published: customPublishResult.published
+    };
+  }
+
   const localAccess = publishConfig && publishConfig.access;
   logger.info(`Publishing ${chalk.cyan(`"${name}"`)} at ${chalk.green(`"${version}"`)}`);
   const publishDir = pkg.dir;
@@ -687,6 +699,19 @@ async function publishAPackage(pkg, access, twoFactorState, tag) {
 async function getUnpublishedPackages(packages, preState) {
   const results = await Promise.all(packages.map(async pkg => {
     const config = pkg.packageJson;
+    if (config.changesets && config.changesets.publish) {
+      const customPublish = require(path.resolve(pkg.dir, config.changesets.publish))
+
+      if (customPublish.getPublishState) {
+        const customPublishState = await customPublish.getPublishState()
+        return {
+          name: config.name,
+          localVersion: config.version,
+          publishedState: (customPublishState || {}).publishedState || 'never',
+          publishedVersions: (customPublishState || {}).publishedVersions || []
+        };
+      }
+    }
     const response = await infoAllow404(config.name);
     let publishedState = "never";
 
